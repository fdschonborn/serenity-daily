name: CI

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 12 * * *" # Every day at 12:00

env:
  SERENITY_ROOT: ${{ github.workspace }}/serenity
  TOOLCHAIN_ROOT: ${{ github.workspace }}/serenity/Toolchain
  BUILD_ROOT: ${{ github.workspace }}/serenity/Build

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Checkout SerenityOS
        uses: actions/checkout@v2
        with:
          repository: SerenityOS/serenity
          path: ${{ env.SERENITY_ROOT }}

      - name: Set environment variables
        run: |
          echo "SERENITY_DAILY_DATE=$(date +%y%m%d)" | tee -a $GITHUB_ENV
          echo "SERENITY_DAILY_COMMIT=$(git -C ${{ env.SERENITY_ROOT }} rev-parse --short HEAD)" | tee -a $GITHUB_ENV

      - name: Update APT cache
        run: sudo apt update -y

      - name: Install script dependencies
        run: |
          sudo apt install -y curl python3-pip
          pip3 install --user requests

      - name: Install SerenityOS prerequisites
        run: sudo apt install -y build-essential cmake ninja-build libmpfr-dev libmpc-dev libgmp-dev e2fsprogs curl qemu-system-i386 qemu-utils

      - name: Set up GCC 10
        run: |
          sudo apt install -y gcc-10 g++-10
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 900 --slave /usr/bin/g++ g++ /usr/bin/g++-10
          gcc --version && g++ --version

      - name: Cache Toolchain
        uses: actions/cache@v2
        with:
          path: ${{ env.TOOLCHAIN_ROOT }}/Cache
          # Keep in sync with SerenityOS' workflow.
          key: ${{ runner.os }}-toolchain-i686-${{ hashFiles('serenity/Userland/Libraries/LibC/**/*.h', 'serenity/Toolchain/Patches/*.patch', 'serenity/Toolchain/BuildIt.sh') }}

      - name: Build Toolchain
        working-directory: ${{ env.TOOLCHAIN_ROOT }}
        run: TRY_USE_LOCAL_TOOLCHAIN=y ./BuildIt.sh

      - name: Create the Build directory
        working-directory: ${{ env.SERENITY_ROOT }}
        run: mkdir -p ${{ env.BUILD_ROOT }}

      - name: Build & Install SerenityOS
        working-directory: ${{ env.BUILD_ROOT }}
        run: |
          cmake -G Ninja ${{ env.SERENITY_ROOT }}
          ninja
          ninja install

      - name: Generate GRUB Disk Image
        working-directory: ${{ env.BUILD_ROOT }}
        run: |
          ninja grub-image
          cp ${{ env.BUILD_ROOT }}/grub_disk_image ${{ env.BUILD_ROOT }}/serenity-grub-${{ env.SERENITY_DAILY_DATE }}-${{ env.SERENITY_DAILY_COMMIT }}.img

      - name: Save GRUB Disk Image
        uses: actions/upload-artifact@v2
        with:
          name: GRUB Disk Image (.img)
          path: ${{ env.BUILD_ROOT }}/serenity-grub-${{ env.SERENITY_DAILY_DATE }}-${{ env.SERENITY_DAILY_COMMIT }}.img

      - name: Generate VirtualBox Disk Image
        working-directory: ${{ env.BUILD_ROOT }}
        run: |
          qemu-img convert -O vdi ${{ env.BUILD_ROOT }}/grub_disk_image ${{ env.BUILD_ROOT }}/serenity-virtualbox-${{ env.SERENITY_DAILY_DATE }}-${{ env.SERENITY_DAILY_COMMIT }}.vdi

      - name: Save VirtualBox Disk Image
        uses: actions/upload-artifact@v2
        with:
          name: VirtualBox Disk Image (.vdi)
          path: ${{ env.BUILD_ROOT }}/serenity-virtualbox-${{ env.SERENITY_DAILY_DATE }}-${{ env.SERENITY_DAILY_COMMIT }}.vdi

      - name: Generate VMWare Disk Image
        working-directory: ${{ env.BUILD_ROOT }}
        run: |
          qemu-img convert -O vmdk ${{ env.BUILD_ROOT }}/grub_disk_image ${{ env.BUILD_ROOT }}/serenity-vmware-${{ env.SERENITY_DAILY_DATE }}-${{ env.SERENITY_DAILY_COMMIT }}.vmdk

      - name: Save VMWare Disk Image
        uses: actions/upload-artifact@v2
        with:
          name: VMWare Disk Image (.vmdk)
          path: ${{ env.BUILD_ROOT }}/serenity-vmware-${{ env.SERENITY_DAILY_DATE }}-${{ env.SERENITY_DAILY_COMMIT }}.vmdk
